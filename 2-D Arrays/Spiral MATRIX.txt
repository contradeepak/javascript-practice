Given an m x n matrix, return all elements of the matrix in spiral order.

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

var spiralOrder = function(matrix) {
 let row=matrix.length;
    let col=matrix[0].length;
    let top=0;
    let right=col-1;
    let bottom=row-1;
    let left=0;
    let bag=[];
    let count=0;
    while(count<row*col){
        for(let i=left; i<=right; i++){
            bag.push(matrix[top][i]);
            count++;
        }
        top++;
        for(let i=top; i<=bottom; i++){
            bag.push(matrix[i][right]);
            count++;
            
        }
        right--;
        for(let i=right; i>=left && top<=bottom; i--){
            bag.push(matrix[bottom][i])
            count++;
        }
        bottom--;
        for(let i=bottom; i>=top && left<=right; i--){
            bag.push(matrix[i][left]);
            count++;
        }
        left++;
    }
    return bag;


    NOTE : This is hard and widely asked problem. Please, practice it and it's oterh solutions also.